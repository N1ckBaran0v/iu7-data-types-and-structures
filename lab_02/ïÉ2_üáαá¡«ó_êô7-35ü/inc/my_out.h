/**
 * Данный модуль содержит функции сохранения и вывода таблиц, а также функцию фильтрации.
 */
#ifndef __MY_OUT_H__

#define __MY_OUT_H__

#include <stdio.h>
#include <stddef.h>
#include <stdbool.h>

#include "my_record.h"
#include "my_sorts.h"

typedef int (*t_sort)(void*, size_t, size_t, f_comp);

/**
 * Сохранение таблицы.
 * Принимает на вход указатель на таблицу, размер и выходной поток.
 * Корректность указателей не проверяется.
 * Корректность размера не проверяется.
 */
void save_table(student *stud, size_t size, FILE *fout);

/**
 * Вывод отсортированной таблицы.
 * Принимает на вход указатель на таблицу, размер, необходимость фильтрации и функцию сортировки.
 * Корректность указателей не проверяется.
 * Корректность размера не проверяется.
 * При необходимости фильтрации запускает функцию фильтр.
 * В качестве указателя на функцию сортировки можно передавать любую функцию сортировки из файла my_sorts.h.
 */
int print_table(student *stud, size_t size, bool need_filter, t_sort sort_data);

/**
 * Фильтр.
 * Принимает на вход указатель на таблицу и размер.
 * Корректность указателя не проверяется.
 * Корректность размера не проверяется.
 * Всегда считывает из stdin, а выводит в stdout, поэтому потоки не передаются как параметр. 
 */
int filter(student *stud, size_t *size);

/**
 * Вывод отсортированной таблицы ключей.
 * Принимает на вход указатель на таблицу ключей и размер.
 * Корректность указателя не проверяется.
 * Корректность размера не проверяется. 
 */
int print_keys(key *keys, size_t size);

/**
 * Вывод отсортированной таблицы.
 * Принимает на вход указатели на таблицы зписей и ключей и размер.
 * Корректность указателей не проверяется.
 * Корректность размера не проверяется. 
 */
int print_by_keys(student *stud, key *keys, size_t size);

#endif //__MY_OUT_H__