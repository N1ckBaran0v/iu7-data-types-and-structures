/**
 * Данный модуль содержит интерфейс работы с хеш-таблицей с открытым хешированием.
 */
#ifndef __MY_HASHO_H__
#define __MY_HASHO_H__

#include <stddef.h>
#include <stdbool.h>

/**
 * Таблица.
 */
typedef struct hasho hasho;

/**
 * Создание таблицы.
 * Возвращает указатель на выделенную память.
 * При возникновении ошибки возвращает нулевой указатель.
 */
hasho *init_hasho(void);

/**
 * Добавление элемента в таблицу.
 * На вход принимает указатель на таблицу, а так же ключ и значение.
 * Возвращает код ошибки.
 * Корректность указателей не проверяется.
 */
int add_hasho(hasho **, const char *, const char *);

/**
 * Удаление элемента из таблицы по имени.
 * На вход принимает указатель на таблицу, а так же ключ.
 * Возвращает код ошибки.
 * Корректность указателей не проверяется.
 */
int del_hasho(hasho *, const char *);

/**
 * Очищение таблицы.
 * На вход принимает указатель на таблицу.
 * Возвращает код ошибки.
 * Корректность указателей не проверяется.
 */
void clear_hasho(hasho *);

/**
 * Поиск по таблице.
 * На вход принимает указатель на таблицу, а так же ключ.
 * Возвращает значение.
 * Если значение не будет найдено, вернёт нулевой указатель.
 * Корректность указателей не проверяется.
 */
char *search_hasho(hasho *, const char *);

/**
 * Количество элементов в таблице.
 * На вход принимает указатель на таблицу.
 * Возвращает количество элементов в таблице.
 * Корректность указателей не проверяется.
 */
size_t size_hasho(const hasho *);

/**
 * Размер используемой памяти.
 * На вход принимает указатель на таблицу.
 * Возвращает размер памяти, используемой таблицей.
 * Корректность указателей не проверяется.
 */
size_t mem_size_hasho(const hasho *);

/**
 * Проверка на пустоту.
 * На вход принимает указатель на таблицу.
 * Возвращает true если таблица пустая, false иначе.
 * Корректность указателей не проверяется.
 */
bool is_empty_hasho(const hasho *);

/**
 * Освобождение памяти.
 * На вход принимает указатель на таблицу.
 * Корректность указателя не проверяется.
 */
void destroy_hasho(hasho *);

/**
 * Сохранение таблицы.
 * На вход принимает указатель на таблицу и имя файла.
 * Возвращает код ошибки.
 * Корректность указателей не проверяется.
 * Существование файла с таким именем не проверяется, если существует, то он перезапишется.
 */
int export_hasho(const hasho *, const char *);

/**
 * Количество сравнений при последнем добавлении/удалении.
 * На вход принимает указатель на хеш-таблицу.
 * Возвращает количество сравнений.
 * Корректность указателя не проверяется.
 * Если указатель нулевой или сравнений раньше не было, вернёт 0.
 */
int lastcmp_hasho(const hasho *);

#endif // __MY_HASHO_H__